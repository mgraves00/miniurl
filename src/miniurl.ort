roles {
	role admin comment "Admin role to add/remove/delete URLs";
};
struct auth {
	comment "user table";
	field id int rowid noexport;
	field username text unique comment "user name";
	field password password comment "user password";
	search username, password: name user limit 1;
	delete id eq: name id;
	delete username streq: name username;
	insert;
	list;
	roles default { search user; };
	roles admin { all; };
};
struct cookie {
	comment "cookie table";
	field id int rowid noexport;
	field cookie text unique comment "cookie hash";
	field user:auth.username text actdel cascade comment "user name";
	field last epoch;
	search cookie streq: name hash limit 1;
	update last set: cookie streq: name last comment "update the last use time";
	insert;
	list;
	delete cookie streq: name cookie comment "delete cookies by cookie";
	delete last le: name old comment "delete cookies which have expired";
	roles default { search hash; delete old; };
	roles admin { all; };
};
struct miniurl {
	comment "redirection table";
	field id int rowid noexport;
	field hash text unique comment "short hash";
	field url text comment "redirect URL";
	field count int default 0 comment "number of time hit";
	search hash streq: name hash limit 1;
	update url: hash streq: name url comment "udpate url provided hash";
	update count inc: hash streq: name counter comment "update the counter when hash is selected";
	delete hash streq: name hash;
	delete id eq: name id;
	insert;
	list;
	roles default { search hash; update counter; };
	roles admin { all; };
};

